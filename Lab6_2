#include <iostream>
#include <cmath>

using namespace std;

// Абстрактний базовий клас "Рівняння"
class Equation {
public:
    // Віртуальна функція для обчислення кореня рівняння
    virtual double calculateRoot() const = 0;
};

// Похідний клас "Лінійне рівняння"
class LinearEquation : public Equation {
private:
    double a, b;
public:
    // Конструктор з параметрами
    LinearEquation(double a_val, double b_val) : a(a_val), b(b_val) {}

    // Реалізація віртуальної функції для обчислення кореня рівняння
    double calculateRoot() const override {
        if (a == 0) {
            cout << "Error: Division by zero!" << endl;
            return NAN; // Not a Number
        }
        return -b / a;
    }
};

// Похідний клас "Квадратне рівняння"
class QuadraticEquation : public Equation {
private:
    double a, b, c;
public:
    // Конструктор з параметрами
    QuadraticEquation(double a_val, double b_val, double c_val) : a(a_val), b(b_val), c(c_val) {}

    // Реалізація віртуальної функції для обчислення коренів рівняння
    double calculateRoot() const override {
        double discriminant = b * b - 4 * a * c;
        if (discriminant < 0) {
            cout << "Error: No real roots!" << endl;
            return NAN; // Not a Number
        } else if (discriminant == 0) {
            return -b / (2 * a);
        } else {
            double sqrt_discriminant = sqrt(discriminant);
            double root1 = (-b + sqrt_discriminant) / (2 * a);
            double root2 = (-b - sqrt_discriminant) / (2 * a);
            // Повертаємо тільки перший корінь
            return root1;
        }
    }
};

// Похідний клас "Біквадратне рівняння"
class BiQuadraticEquation : public Equation {
private:
    double a, b, c, d;
public:
    // Конструктор з параметрами
    BiQuadraticEquation(double a_val, double b_val, double c_val, double d_val) : a(a_val), b(b_val), c(c_val), d(d_val) {}

    // Реалізація віртуальної функції для обчислення коренів рівняння
    double calculateRoot() const override {
        // Ваша реалізація обчислення коренів біквадратного рівняння
        cout << "Error: BiQuadraticEquation is not implemented yet!" << endl;
        return NAN; // Not a Number
    }
};

int main() {
    // Тестування лінійного рівняння
    LinearEquation linear(2, 5);
    cout << "Root of linear equation: " << linear.calculateRoot() << endl;

    // Тестування квадратного рівняння
    QuadraticEquation quadratic(1, -3, 2);
    cout << "Root of quadratic equation: " << quadratic.calculateRoot() << endl;

    // Тестування біквадратного рівняння
    BiQuadraticEquation biQuadratic(1, -4, 4, -3);
    cout << "Root of biquadratic equation: " << biQuadratic.calculateRoot() << endl;

    return 0;
}
